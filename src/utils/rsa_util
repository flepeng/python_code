import rsa
from binascii import b2a_hex, a2b_hex


class RSA(object):
    def __init__(self, pub_key, pri_key):
        self.pub_key = pub_key
        self.pri_key = pri_key

    def encrypt(self, text, encode="utf8"):
        cipher_text = rsa.encrypt(text.encode(), self.pub_key)
        # 因为 RSA 加密时候得到的字符串不一定是 ascii 字符集的，输出到终端或者保存时候可能存在问题
        # 所以这里统一把加密后的字符串转化为16进制字符串
        print(cipher_text)
        return str(b2a_hex(cipher_text), encoding="utf8")

    def decrypt(self, text):
        decrypt_text = rsa.decrypt(a2b_hex(text), self.pri_key)
        return decrypt_text.decode("utf8")


if __name__ == '__main__':
    pub_key, pri_key = rsa.newkeys(256)
    obj = RSA(pub_key, pri_key)
    text = '中国'
    text = '1111'
    encrypt_text = obj.encrypt(text)
    print(encrypt_text)  # b'7cb319c67853067abcd16aad25b3a8658e521f83b1e6a6cf0c4c2e9303ad3e14'
    print(obj.decrypt(encrypt_text))  # b'hello'
